variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - deploy

.artifacts: &artifacts
  name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHA"
  paths:
    - utils/output/
  expire_in: 90 minutes

build:win64:
  image: dosowisko/libsuperderpy-win64
  stage: build
  retry: 1
  cache:
    key: win64-assetcache
    paths:
      - .assetcache/
  artifacts: *artifacts
  script:
    - cd utils
    - ./package_win64.sh

build:win32:
  image: dosowisko/libsuperderpy-win32
  stage: build
  retry: 1
  cache:
    key: win32-assetcache
    paths:
      - .assetcache/
  artifacts: *artifacts
  script:
    - cd utils
    - ./package_win32.sh

build:html5:
  image: dosowisko/libsuperderpy-emscripten
  stage: build
  retry: 1
  cache:
    key: html5-assetcache
    paths:
      - .assetcache/
  artifacts: *artifacts
  script:
    - cd utils
    - ./package_html5.sh

build:wasm:
  image: dosowisko/libsuperderpy-emscripten
  stage: build
  retry: 1
  cache:
    key: wasm-assetcache
    paths:
      - .assetcache/
  artifacts: *artifacts
  script:
    - cd utils
    - ./package_wasm.sh

build:linux-steamrt-amd64:
  image: dosowisko/libsuperderpy-linux-amd64
  stage: build
  retry: 1
  cache:
    key: linux-steamrt-amd64-assetcache
    paths:
      - .assetcache/
  artifacts: *artifacts
  script:
    - cd utils
    - NO_STEAM_RUNTIME=1 ./package_linux_amd64.sh

build:linux-steamrt-i686:
  image: dosowisko/libsuperderpy-linux-i686
  stage: build
  retry: 1
  cache:
    key: linux-steamrt-i686-assetcache
    paths:
      - .assetcache/
  artifacts: *artifacts
  script:
    - cd utils
    - NO_STEAM_RUNTIME=1 ./package_linux_i686.sh

build:linux-flatpak-amd64:
  image: dosowisko/libsuperderpy-flatpak-amd64
  stage: build
  retry: 1
  cache:
    key: linux-flatpak-amd64
    paths:
      - .assetcache/
      - .flatpak-builder/
  artifacts: *artifacts
  script:
    - flatpak-builder build-flatpak flatpak/$BUNDLE_ID.json --arch=x86_64 --repo=build-flatpak-repo
    - mkdir -p utils/output
    - flatpak build-bundle build-flatpak-repo utils/output/$PROJECT_NAME-linux-amd64.flatpak $BUNDLE_ID --arch=x86_64

build:linux-flatpak-arm64:
  image: dosowisko/libsuperderpy-flatpak-arm64
  stage: build
  retry: 1
  cache:
    key: linux-flatpak-arm64
    paths:
      - .assetcache/
      - .flatpak-builder/
  artifacts: *artifacts
  script:
    - update-binfmts --enable qemu-aarch64
    - flatpak-builder build-flatpak flatpak/$BUNDLE_ID.json --arch=aarch64 --repo=build-flatpak-repo
    - mkdir -p utils/output
    - flatpak build-bundle build-flatpak-repo utils/output/$PROJECT_NAME-linux-arm64.flatpak $BUNDLE_ID --arch=aarch64

build:linux-flatpak-armv7:
  image: dosowisko/libsuperderpy-flatpak-armv7
  stage: build
  retry: 1
  cache:
    key: linux-flatpak-armv7
    paths:
      - .assetcache/
      - .flatpak-builder/
  artifacts: *artifacts
  script:
    - update-binfmts --enable qemu-arm
    - flatpak-builder build-flatpak flatpak/$BUNDLE_ID.json --arch=arm --repo=build-flatpak-repo
    - mkdir -p utils/output
    - flatpak build-bundle build-flatpak-repo utils/output/$PROJECT_NAME-linux-armv7.flatpak $BUNDLE_ID --arch=arm

build:linux-flatpak-i686:
  image: dosowisko/libsuperderpy-flatpak-i686
  stage: build
  retry: 1
  cache:
    key: linux-flatpak-i686
    paths:
      - .assetcache/
      - .flatpak-builder/
  artifacts: *artifacts
  script:
    - flatpak-builder build-flatpak flatpak/$BUNDLE_ID.json --arch=i386 --repo=build-flatpak-repo
    - mkdir -p utils/output
    - flatpak build-bundle build-flatpak-repo utils/output/$PROJECT_NAME-linux-i686.flatpak $BUNDLE_ID --arch=i386

build:macos:
  image: dosowisko/libsuperderpy-macos
  stage: build
  retry: 1
  cache:
    key: macos-assetcache
    paths:
      - .assetcache/
  artifacts: *artifacts
  script:
    - cd utils
    - ./package_osx.sh

build:maemo5:
  image: docker:dind
  stage: build
  retry: 1
  cache:
    key: maemo5-assetcache
    paths:
      - .assetcache/
  artifacts: *artifacts
  script:
    - dockerd &
    - sleep 5 # give it some time to launch
    - cd utils
    - ./package_maemo5.sh

deploy:linux-steamrt-i686:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-linux-steamrt-i686
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:linux-steamrt-i686
  script:
    - butler push utils/output/$PROJECT_NAME-linux-i686.tar.gz $BUTLER_TARGET:ci-linux-steamrt-i686 --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:linux-steamrt-amd64:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-linux-steamrt-amd64
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:linux-steamrt-amd64
  script:
    - butler push utils/output/$PROJECT_NAME-linux-amd64.tar.gz $BUTLER_TARGET:ci-linux-steamrt-amd64 --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:linux-flatpak-amd64:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-linux-flatpak-amd64
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:linux-flatpak-amd64
  script:
    - butler push utils/output/$PROJECT_NAME-linux-amd64.flatpak $BUTLER_TARGET:ci-linux-flatpak-amd64 --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:linux-flatpak-arm64:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-linux-flatpak-arm64
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:linux-flatpak-arm64
  script:
    - butler push utils/output/$PROJECT_NAME-linux-arm64.flatpak $BUTLER_TARGET:ci-linux-flatpak-arm64 --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:linux-flatpak-armv7:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-linux-flatpak-armv7
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:linux-flatpak-armv7
  script:
    - butler push utils/output/$PROJECT_NAME-linux-armv7.flatpak $BUTLER_TARGET:ci-linux-flatpak-armv7 --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:linux-flatpak-i686:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-linux-flatpak-i686
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:linux-flatpak-i686
  script:
    - butler push utils/output/$PROJECT_NAME-linux-i686.flatpak $BUTLER_TARGET:ci-linux-flatpak-i686 --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:win32:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-win32
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:win32
  script:
    - butler push utils/output/$PROJECT_NAME-win32.zip $BUTLER_TARGET:ci-win32 --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:win64:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-win64
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:win64
  script:
    - butler push utils/output/$PROJECT_NAME-win64.zip $BUTLER_TARGET:ci-win64 --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:html5:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-html5
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:html5
  script:
    - butler push utils/output/$PROJECT_NAME-html5.zip $BUTLER_TARGET:ci-html5 --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:wasm:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-wasm
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:wasm
  script:
    - butler push utils/output/$PROJECT_NAME-wasm.zip $BUTLER_TARGET:ci-wasm --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:macos:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-macos
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:macos
  script:
    - butler push utils/output/$PROJECT_NAME-osx.zip $BUTLER_TARGET:ci-macos --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:maemo5:
  image: dosowisko/butler
  stage: deploy
  when: on_success
  retry: 2
  environment:
    name: itch-maemo5
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build:maemo5
  script:
    - butler push utils/output/$PROJECT_NAME-maemo5.tar.gz $BUTLER_TARGET:ci-maemo5 --userversion `echo $CI_COMMIT_SHA | cut -c1-7`
